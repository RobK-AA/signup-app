[{"/Users/robertkornblum/Desktop/signup-app/src/components/App.js":"1","/Users/robertkornblum/Desktop/signup-app/src/index.js":"2","/Users/robertkornblum/Desktop/signup-app/src/serviceWorker.js":"3","/Users/robertkornblum/Desktop/signup-app/src/components/User.js":"4","/Users/robertkornblum/Desktop/signup-app/src/components/Root.js":"5","/Users/robertkornblum/Desktop/signup-app/src/components/Login/login.jsx":"6"},{"size":307,"mtime":1610825486881,"results":"7","hashOfConfig":"8"},{"size":1299,"mtime":1610805774133,"results":"9","hashOfConfig":"8"},{"size":5729,"mtime":1610642859860,"results":"10","hashOfConfig":"8"},{"size":1107,"mtime":1610825912049,"results":"11","hashOfConfig":"8"},{"size":299,"mtime":1610804202754,"results":"12","hashOfConfig":"8"},{"size":6000,"mtime":1610852618356,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"3hkmmd",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/robertkornblum/Desktop/signup-app/src/components/App.js",[],["28","29"],"/Users/robertkornblum/Desktop/signup-app/src/index.js",[],"/Users/robertkornblum/Desktop/signup-app/src/serviceWorker.js",[],"/Users/robertkornblum/Desktop/signup-app/src/components/User.js",["30","31","32"],"import React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport { Query } from \"react-apollo\";\n\nconst USER_QUERY = gql` \n  query findUser($email: String!) {\n    user(email: $email) {\n      id\n      email\n      username\n      name\n      picture\n    }\n  }\n`;\n\n\nconst User = () => {\n  const userEmail = localStorage.getItem('email');\n  const { loading, error, data } = useQuery(USER_QUERY, {\n    variables: { email: userEmail },\n  });\n  return (\n    <div>\n      {data && (\n        <>\n            <div key={data.user.id}>\n                {data.user.name}, {data.user.username}, {data.user.email}, {data.user.picture}\n            </div>\n        </>\n      )}\n    </div>\n  );\n\n  // return (\n  //   <Query query={USER_QUERY}>\n  //     {({ loading, error, data }) => {\n  //       if (loading) return \"Loading...\";\n  //       if (error) return `Error! ${error.message}`;\n\n  //       return (\n  //         <div>\n  //           {data.user.name}, {data.user.username}, {data.user.email}, {data.user.picture}\n  //         </div>\n  //       );\n  //     }}\n  //   </Query>\n  // );\n};\n\nexport default User;","/Users/robertkornblum/Desktop/signup-app/src/components/Root.js",[],"/Users/robertkornblum/Desktop/signup-app/src/components/Login/login.jsx",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":3,"column":10,"nodeType":"39","messageId":"40","endLine":3,"endColumn":15},{"ruleId":"37","severity":1,"message":"41","line":20,"column":11,"nodeType":"39","messageId":"40","endLine":20,"endColumn":18},{"ruleId":"37","severity":1,"message":"42","line":20,"column":20,"nodeType":"39","messageId":"40","endLine":20,"endColumn":25},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'Query' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]