[{"/Users/robertkornblum/Desktop/signup-app/src/components/App.js":"1","/Users/robertkornblum/Desktop/signup-app/src/index.js":"2","/Users/robertkornblum/Desktop/signup-app/src/serviceWorker.js":"3","/Users/robertkornblum/Desktop/signup-app/src/components/User.js":"4","/Users/robertkornblum/Desktop/signup-app/src/components/Root.js":"5","/Users/robertkornblum/Desktop/signup-app/src/components/Signup/signup.jsx":"6","/Users/robertkornblum/Desktop/signup-app/src/components/Login/login.jsx":"7"},{"size":307,"mtime":1610805563177,"results":"8","hashOfConfig":"9"},{"size":1299,"mtime":1610805774133,"results":"10","hashOfConfig":"9"},{"size":5729,"mtime":1610642859860,"results":"11","hashOfConfig":"9"},{"size":599,"mtime":1610807705907,"results":"12","hashOfConfig":"9"},{"size":299,"mtime":1610804202754,"results":"13","hashOfConfig":"9"},{"size":5540,"mtime":1610732422695,"results":"14","hashOfConfig":"9"},{"size":5797,"mtime":1610807450280,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"3hkmmd",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/robertkornblum/Desktop/signup-app/src/components/App.js",[],["32","33"],"/Users/robertkornblum/Desktop/signup-app/src/index.js",[],"/Users/robertkornblum/Desktop/signup-app/src/serviceWorker.js",[],"/Users/robertkornblum/Desktop/signup-app/src/components/User.js",[],"/Users/robertkornblum/Desktop/signup-app/src/components/Root.js",[],"/Users/robertkornblum/Desktop/signup-app/src/components/Signup/signup.jsx",["34","35"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { gql, useMutation } from '@apollo/client';\n\nconst SIGNUP_MUTATION = gql`\n        mutation SignupMutation(\n            $email: String!\n            $username: String!\n            $name: String!\n            $password: String!\n            $picture: String!\n        ) {\n            signup(\n                email: $email\n                password: $password\n                name: $name\n                username: $username\n                picture: $picture\n            ) {\n                token\n            }\n        }\n    `;\n\nclass Signup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: \"\",\n            username: \"\",\n            email: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            picture: null,\n            pictureUrl: \"https://img.icons8.com/ios-glyphs/100/000000/test-account.png\",\n            errors: {}\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.addPhoto = this.addPhoto.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({ errors: nextProps.errors });\n    }\n\n    update(field) {\n        return e => {\n            if (this.props.errors) this.props.clearErrors();\n            this.setState({\n                [field]: e.currentTarget.value\n            });\n        };\n    }\n    \n    handleSubmit(e) {\n        e.preventDefault();\n        const user = new FormData();\n        user.append(\"user[name]\", this.state.name);\n        user.append(\"user[username]\", this.state.username);\n        user.append(\"user[email]\", this.state.email);\n        user.append(\"user[password]\", this.state.password);\n        user.append(\"user[picture]\", this.state.picture);\n    \n        this.props.createUser(user).then(\n            () => {\n                return this.props.history.push(`/confirmation`, this.state)\n            }\n        );\n    }\n\n    addPhoto(e) {\n        e.preventDefault();\n        const profilePhoto = new FileReader();\n        const photo = e.target.files[0];\n\n        profilePhoto.onloadend = () => {\n            let newPhotoUrl = this.state.pictureUrl;\n            newPhotoUrl = profilePhoto.result\n\n            let newPhoto = this.state.picture;\n            newPhoto = photo;\n\n            this.setState({ pictureUrl: newPhotoUrl, picture: newPhoto });\n        }\n\n        if (photo) {\n            profilePhoto.readAsDataURL(photo);\n        } else {\n            alert(\"Please choose another file type\")\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"form-container\">\n                <h1>Sign up here!</h1>\n                <p className=\"required-field\">* = required field</p>\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"form-item\">\n                        <label>Username*</label>\n                        <div className=\"input-item\">\n                            <input onChange={this.update('username')} type='text'></input>\n                        </div>\n                    </div>\n                    <div className=\"form-item\">\n                        <label>Email*</label>\n                        <div className=\"input-item\">\n                            <input onChange={this.update('email')} type='text'></input>\n                        </div>\n                    </div>\n                    <div className=\"form-item\">\n                        <label>Name*</label>\n                        <div className=\"input-item\">\n                            <input onChange={this.update('name')} type='text'></input>\n                        </div>\n                    </div>\n                    <div className=\"form-item\">\n                        <label>Password*</label>\n                        <div className=\"input-item\">\n                            <input onChange={this.update('password')} type='text'></input>\n                        </div>\n                    </div>\n                    <div className=\"form-item\">\n                        <label>Confirm Password*</label>\n                        <div className=\"input-item\">\n                            <input onChange={this.update('confirmPassword')} type='text'></input>\n                        </div>\n                    </div>\n                    <div className=\"form-item\">\n                        <label>Picture*</label>\n                        <div style={{ backgroundImage: `url(${this.state.pictureUrl})` }} className=\"picture-container\"></div>\n                    </div>\n                    <label className=\"profile-photo\" htmlFor=\"profile-photo\"></label>\n                        <div className=\"photo-input-item\">\n                            <input \n                                onChange={this.addPhoto} \n                                id=\"profile-photo\" \n                                className=\"photo-input\" \n                                type=\"file\"\n                            />\n                        </div>\n                    <p>Already have an account?</p>\n                    <p><Link to=\"/login\">Log in</Link></p>\n                    <button type=\"submit\">Sign Up!</button>\n                </form>\n                <div>\n                    <p>{this.state.username}</p>\n                    <p>{this.state.email}</p>\n                    <p>{this.state.name}</p>\n                    <p>{this.state.password}</p>\n                    <p>{this.state.confirmPassword}</p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Signup;","/Users/robertkornblum/Desktop/signup-app/src/components/Login/login.jsx",["36","37"],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":3,"column":15,"nodeType":"44","messageId":"45","endLine":3,"endColumn":26},{"ruleId":"42","severity":1,"message":"46","line":5,"column":7,"nodeType":"44","messageId":"45","endLine":5,"endColumn":22},{"ruleId":"42","severity":1,"message":"47","line":51,"column":18,"nodeType":"44","messageId":"45","endLine":51,"endColumn":25},{"ruleId":"42","severity":1,"message":"48","line":51,"column":27,"nodeType":"44","messageId":"45","endLine":51,"endColumn":32},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'useMutation' is defined but never used.","Identifier","unusedVar","'SIGNUP_MUTATION' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]